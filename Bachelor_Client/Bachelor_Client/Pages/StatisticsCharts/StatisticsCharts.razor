@using Bachelor_Client.Models
@using Bachelor_Client.Services.Statistics
@using Bachelor_Client.Services.WorkerConfig
@inherits Bachelor_Client.Pages.StatisticsCharts.StatisticsChartsBase
@inject IWorkerConfigService WorkerConfigService
@inject IWorkerStatistics WorkerStatisticsService
@if (ShowConfirmation)
{
    <div class="containerStat" style="width: 100%; align-content: center; margin-left: 10%">
        <SfChart Title="Analysis Of Failed Runs" Width="100%">
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Workers"
                               LabelPlacement="LabelPlacement.OnTicks" EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                               LabelIntersectAction="LabelIntersectAction.Rotate90"
                               EnableTrim="false" MaximumLabelWidth="50" LabelPosition="AxisPosition.Outside">
                <ChartAxisLabelStyle Color="red" FontWeight="bold"></ChartAxisLabelStyle>
                <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
                <ChartMultiLevelLabels>

                    <ChartMultiLevelLabel>
                        <ChartAxisMultiLevelLabelTextStyle FontWeight="bold"></ChartAxisMultiLevelLabelTextStyle>
                        <ChartAxisMultiLevelLabelBorder Type="BorderType.Brace" Color="blue" Width=2>
                        </ChartAxisMultiLevelLabelBorder>
                        <ChartCategories>
                            <ChartCategory Start="-0.5" End="21.5" Text="Worker Name"></ChartCategory>
                        </ChartCategories>
                    </ChartMultiLevelLabel>
                </ChartMultiLevelLabels>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Title="Number Of Failed Runs" Minimum="0" Maximum="100" Interval="10">
                <ChartAxisLabelStyle Color="blue" FontWeight="bold"></ChartAxisLabelStyle>
                <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@_statisticsToDisplay" XName="ID" YName="numberOfFailedRuns" Type="ChartSeriesType.Column">
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    </div>
    <div class="containerStat" style="width: 100%; align-content: center; margin-left: 10%">
        <SfChart Title="Analysis Of The Duration Time Of The Workers" Width="100%">
            <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Workers"
                               LabelPlacement="LabelPlacement.OnTicks" EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                               LabelIntersectAction="LabelIntersectAction.Rotate90"
                               EnableTrim="true" MaximumLabelWidth="50" LabelPosition="AxisPosition.Outside">
                <ChartAxisLabelStyle Color="red" FontWeight="bold"></ChartAxisLabelStyle>
                <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
                <ChartMultiLevelLabels>

                    <ChartMultiLevelLabel>
                        <ChartAxisMultiLevelLabelTextStyle FontWeight="bold"></ChartAxisMultiLevelLabelTextStyle>
                        <ChartAxisMultiLevelLabelBorder Type="BorderType.Brace" Color="blue" Width=2>
                        </ChartAxisMultiLevelLabelBorder>
                        <ChartCategories>
                            <ChartCategory Start="-0.5" End="21.5" Text="Worker Name"></ChartCategory>
                        </ChartCategories>
                    </ChartMultiLevelLabel>
                </ChartMultiLevelLabels>
            </ChartPrimaryXAxis>
            <ChartPrimaryYAxis Title="Average Duration (in minutes)" Minimum="0" Maximum="200" Interval="20">
                <ChartAxisLabelStyle Color="blue" FontWeight="bold"></ChartAxisLabelStyle>
                <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
            </ChartPrimaryYAxis>
            <ChartSeriesCollection>
                <ChartSeries DataSource="@_statisticsToDisplay" XName="ID" YName="duration" Type="ChartSeriesType.Line">
                </ChartSeries>
            </ChartSeriesCollection>
        </SfChart>
    </div>
}
@code {

    public class ModelTest
    {
        public int ID { get; set; }
        public string URL { get; set; }
        public double duration { get; set; }
        public bool isActive { get; set; }
        public int numberOfFailedRuns { get; set; }
        public string status { get; set; }
    }

    private List<ModelTest> _statisticsToDisplay = new();
    private List<Models.WorkerStatistic> WorkerStatisticsList = new();
    Models.WorkerStatistic _workerStatistic = new WorkerStatistic();
    protected override async Task OnInitializedAsync()
    {
        WorkerStatisticsList = await WorkerStatisticsService.ReadAllWorkerStatistics();
        _workerStatistic = WorkerStatisticsService.GetWorkerStatisticById(workerStatisticsID);
        _statisticsToDisplay = ReadWorkerStatistics();
       
    }

    List<ModelTest> ReadWorkerStatistics()
    {
        List<ModelTest> statistics = new List<ModelTest>();
       
        int countNumberOfFailedRuns = 0;
        DateTime? start = _workerStatistic.StartTime;
        DateTime? end = _workerStatistic.EndTime;
        TimeSpan? calculateDuration = end -start;
                
        if (_workerStatistic.Status == "Failed")
        {
            countNumberOfFailedRuns++;
        }
        statistics.Add(new ModelTest()
        {
            ID = _workerStatistic.PkWorkerStatisticsId, duration = calculateDuration.Value.TotalMinutes,numberOfFailedRuns = countNumberOfFailedRuns
        });
        return statistics;
    }
    
}