@page "/EditAccount/{accountID}"
@using Bachelor_Client.Models
@using Bachelor_Client.Services.Account
@using Bunit.Extensions
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
@layout CreateEditAccountLayout
<CascadingAuthenticationState>
<AuthorizeView Policy="loggedAdmin">
	<Authorized >
		
		 <body class="form-v9">
		 <div class="page-content">
			 <div class="form-v9-content" style=" background:  rgba(3,3,3,0.68);">
				 <form class="form-detail" @onsubmit="Edit">
					 <h2>Edit User</h2>
					 <div class="form-row-total">
						 <div class="form-row">
							 <input @bind="account.DisplayName" type="text" name="full-name" id="full-name" class="input-text" placeholder="Name"  style="color: white">
						 </div>
						 <div class="form-row">
							 <input @bind="account.Email" readonly type="email" name="your-email" id="your-email" class="input-text" placeholder="Email"   style="color: white">
						 </div>
					 </div>
					 <div class="form-row-total">
						 <div class="form-row">
							 <input @bind="account.Password" type="password" name="password" id="password" class="input-text" placeholder="Password"  style="color: white">
						 </div>
						 <div class="form-row">
							 <select @bind="account.Type" class="userType" name="userType" placeholder="User Type" style="color: white">
								 <option value="admin" style="color: black">Admin</option>
								 <option value="user" style="color: black">User</option>
							 </select>
						 </div>
					 </div>
					 <div class="form-row-last">
						 <input type="submit" name="register" class="register" value="Edit user">
					 </div>
					  <div class="form-row-last">
                     					@displayMessage
                     					 </div>
				 </form>
			 </div>
		 </div>
		 </body>
	
	</Authorized>
	<NotAuthorized>
		<body>
		<header class="bgimg-1" id="home">
			<div class="w3-display-left w3-text-white" style="padding-left: 5%">
				<span class="w3-jumbo w3-hide-small" style="color: red">Only logged administrators have access to this page</span><br>
				<span class="w3-xxlarge w3-hide-large w3-hide-medium" style="color: red">Only logged administrators have access to this page</span><br>
			</div>
		</header>
		</body>
	</NotAuthorized>
</AuthorizeView>
</CascadingAuthenticationState>
@code {
    [Parameter]
    public string accountID { get; set; }
    private Account account = new Account();
	private string displayMessage = "";
	
	async Task Edit()
	{
		displayMessage = "";
		try
		{
			if (!account.DisplayName.IsNullOrEmpty() && !account.Password.IsNullOrEmpty())
			{
				displayMessage = await AccountService.EditAccount(account);
				Console.WriteLine(displayMessage);
				if (displayMessage.Equals("Account edited successfully")) 
				{
					NavigationManager.NavigateTo("/AccountsList");
				}
			}
			else
			{
				throw new Exception("Email and password cannot be empty");
			}
			
			
		}
		catch (Exception e)
		{
			Console.WriteLine(e);
			displayMessage = e.Message;
		}
	}

    protected override async Task OnInitializedAsync()
    {
	    account = AccountService.GetAccountById(Int32.Parse(accountID));
    }

}