@page "/CreateAccount"
@using Bachelor_Client.Models
@using Bachelor_Client.Services.Account
@layout CreateEditAccountLayout
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
<CascadingAuthenticationState>
<AuthorizeView Policy="loggedAdmin">
	<Authorized >
		
		 <body class="form-v9">
		 <div class="page-content">
			 <div class="form-v9-content" style=" background:  rgba(3,3,3,0.68);">
				 <form class="form-detail" @onsubmit="CreateNewAccount">
					 <h2>Create User</h2>
					 <div class="form-row-total">
						 <div class="form-row">
							 <input @bind="name" type="text" name="full-name" id="full-name" class="input-text" placeholder="Name" required>
						 </div>
						 <div class="form-row">
							 <input @bind="email" type="email" name="your-email" id="your-email" class="input-text" placeholder="Email"  required>
						 </div>
					 </div>
					 <div class="form-row-total">
						 <div class="form-row">
							 <input @bind="password" type="password" name="password" id="password" class="input-text" placeholder="Password" required>
						 </div>
						 <div class="form-row">
							 <select @bind="type" class="userType" name="userType" placeholder="User Type">
								 <option value="admin">Admin</option>
								 <option value="user">User</option>
							 </select>
						 </div>
					 </div>
					 <div class="form-row-last">
						 <input type="submit" name="register" class="register" value="Add user">
					 </div>
					  <div class="form-row-last">
                     					@displayMessage
                     					 </div>
				 </form>
			 </div>
		 </div>
		 </body>
	
	</Authorized>
	<NotAuthorized>
		<body>
		<header class="bgimg-1" id="home">
			<div class="w3-display-left w3-text-white" style="padding-left: 5%">
				<span class="w3-jumbo w3-hide-small" style="color: red">Only logged administrators have access to this page</span><br>
				<span class="w3-xxlarge w3-hide-large w3-hide-medium" style="color: red">Only logged administrators have access to this page</span><br>
			</div>
		</header>
		</body>
	</NotAuthorized>
</AuthorizeView>
</CascadingAuthenticationState>
@code {
	private string displayMessage = "";
	string type = "user";
	string name { get; set; }
	string password { get; set; }
	string email { get; set; }
	async Task CreateNewAccount()
	{
		displayMessage = await AccountService.CreateAccount(InitData());
		if(displayMessage.Equals("Account created successfully"))
		NavigationManager.NavigateTo("/AccountsList");
	}
	
	
	private Account InitData()
	{
		return new Account()
		{
			DisplayName = name,
			Password = password,
			Email = email,
			Type = type
		};
	}
}