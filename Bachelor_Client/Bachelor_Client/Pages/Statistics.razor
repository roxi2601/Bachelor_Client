@page "/Statistics"
@using Bachelor_Client.Services.WorkerConfig
@inject IWorkerConfigService WorkerConfigService
@layout WorkerConfigurationsLayout
<CascadingAuthenticationState>
    <AuthorizeView >
        <NotAuthorized>
            <body>
            <header class="bgimg-1" id="home">
                <div class="w3-display-left w3-text-white" style="padding-left: 5%">
                    <div class="container" style="background: none">
                        <span class="w3-jumbo w3-hide-small">Log in to see the content</span><br>
                        <span class="w3-xxlarge w3-hide-large w3-hide-medium">Log in to see the content</span><br>
                    </div>
                </div>
            </header>
            </body>
        </NotAuthorized>
        <Authorized>
            <div class="container2">
                <div class="row">
                    <div class="col-sm" style="margin-left: 10%; margin-top: 5%; align-content: center;">
                        <div class="containerStat" style="width: 100%; align-content: center; margin-left: 10%">


                            <table class='table' style=" color: black">
                                <thead>
                                <tr>
                                    <th class="url" style="width: 35%">Worker</th>
                                    <th class="isActive" style="width: 15%">Is Active</th>
                                    <th class="authType" style="width: 15%">Status</th>
                                    <th class="duration" style="width: 15%">Duration (s)</th>
                                </tr>
                                </thead>
                                <tbody>

                                @foreach (var workerStatistic in WorkerDetails)
                                {
                                    <tr>
                                        <td>@workerStatistic.URL</td>
                                        <td>@workerStatistic.isActive</td>
                                        <td>@workerStatistic.status</td>
                                        <td>@workerStatistic.duration</td>
                                    </tr>
                                }
                                </tbody>
                            </table>


                        </div>

                    </div>
                    <div class="col-sm" style="margin-right: 10%; margin-top: 5%; align-content: center;">
                        <div class="containerStat" style="width: 100%; align-content: center; margin-left: 10%">
                            <SfChart EnableAnimation="true" Title="Analysis Of Failed Runs" Width="100%">
                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Workers"
                                                   LabelPlacement="LabelPlacement.OnTicks" EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                                                   LabelIntersectAction="LabelIntersectAction.Rotate90"
                                                   EnableTrim="true" MaximumLabelWidth="50" LabelPosition="AxisPosition.Outside">
                                    <ChartAxisLabelStyle Color="red" FontWeight="bold"></ChartAxisLabelStyle>
                                    <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
                                    <ChartMultiLevelLabels>

                                        <ChartMultiLevelLabel>
                                            <ChartAxisMultiLevelLabelTextStyle FontWeight="bold"></ChartAxisMultiLevelLabelTextStyle>
                                            <ChartAxisMultiLevelLabelBorder Type="BorderType.Brace" Color="blue" Width=2>
                                            </ChartAxisMultiLevelLabelBorder>
                                            <ChartCategories>
                                                <ChartCategory Start="-0.5" End="21.5" Text="Worker Name"></ChartCategory>
                                            </ChartCategories>
                                        </ChartMultiLevelLabel>
                                    </ChartMultiLevelLabels>
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis Title="Number Of Failed Runs" Minimum="0" Maximum="100" Interval="10">
                                    <ChartAxisLabelStyle Color="blue" FontWeight="bold"></ChartAxisLabelStyle>
                                    <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="@WorkerDetails" XName="URL" YName="numberOfFailedRuns" Type="ChartSeriesType.Column">
                                    </ChartSeries>
                                </ChartSeriesCollection>
                            </SfChart>
                        </div>
                        <div class="containerStat" style="width: 100%; align-content: center; margin-left: 10%">
                            <SfChart EnableAnimation="true" Title="Analysis Of The Duration Time Of The Workers" Width="100%">
                                <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Title="Workers"
                                                   LabelPlacement="LabelPlacement.OnTicks" EdgeLabelPlacement="EdgeLabelPlacement.Shift"
                                                   LabelIntersectAction="LabelIntersectAction.Rotate90"
                                                   EnableTrim="true" MaximumLabelWidth="50" LabelPosition="AxisPosition.Outside">
                                    <ChartAxisLabelStyle Color="red" FontWeight="bold"></ChartAxisLabelStyle>
                                    <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
                                    <ChartMultiLevelLabels>

                                        <ChartMultiLevelLabel>
                                            <ChartAxisMultiLevelLabelTextStyle FontWeight="bold"></ChartAxisMultiLevelLabelTextStyle>
                                            <ChartAxisMultiLevelLabelBorder Type="BorderType.Brace" Color="blue" Width=2>
                                            </ChartAxisMultiLevelLabelBorder>
                                            <ChartCategories>
                                                <ChartCategory Start="-0.5" End="21.5" Text="Worker Name"></ChartCategory>
                                            </ChartCategories>
                                        </ChartMultiLevelLabel>
                                    </ChartMultiLevelLabels>
                                </ChartPrimaryXAxis>
                                <ChartPrimaryYAxis Title="Average Duration (in seconds)" Minimum="0" Maximum="500" Interval="50">
                                    <ChartAxisLabelStyle Color="blue" FontWeight="bold"></ChartAxisLabelStyle>
                                    <ChartAxisTitleStyle Color="#ed7d31" FontWeight="bold"></ChartAxisTitleStyle>
                                </ChartPrimaryYAxis>
                                <ChartSeriesCollection>
                                    <ChartSeries DataSource="@WorkerDetails" XName="URL" YName="duration" Type="ChartSeriesType.Line">
                                    </ChartSeries>
                                </ChartSeriesCollection>
                            </SfChart>
                        </div>
                    </div>
                </div>
            </div>
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code{

    public class ModelTest
    {
        public string URL { get; set; }
        public int numberOfFailedRuns { get; set; }
        public double duration { get; set; }
        public bool isActive { get; set; }
        public string status { get; set; }
    }

    private List<Models.WorkerConfiguration> WorkerConfigList = new();
    private List<Models.WorkerStatistic> WorkerStatisticsList = new();

    public List<ModelTest> WorkerDetails;


    protected override async Task OnInitializedAsync()
    {
        WorkerConfigList = await WorkerConfigService.ReadAllWorkerConfigurations();
        WorkerStatisticsList = await WorkerConfigService.ReadAllWorkerStatistics();

        WorkerDetails = new List<ModelTest>
        {
            new ModelTest() { URL = "Caca", numberOfFailedRuns = 12, isActive = true, status = "Running" },
            new ModelTest() { URL = "Caca1", numberOfFailedRuns = 20, isActive = false, status = "Failed" },
            new ModelTest() { URL = "Caca2", numberOfFailedRuns = 40, isActive = true, status = "Success" },
            new ModelTest() { URL = "Caca3", numberOfFailedRuns = 60, isActive = true, status = "Success" },
            new ModelTest() { URL = "Caca4", numberOfFailedRuns = 40, isActive = false, status = "Failed" },
            new ModelTest() { URL = "Caca5", numberOfFailedRuns = 100, isActive = false, status = "Running" },
        };
    }

}