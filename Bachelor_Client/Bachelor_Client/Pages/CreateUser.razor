@page "/CreateUser"
@using Bachelor_Client.Models
@using Bachelor_Client.Services.Account
@layout CreateUserLayout
@inject IAccountService AccountService
@inject NavigationManager NavigationManager
<CascadingAuthenticationState>
<AuthorizeView Policy="loggedAdmin">
	<Authorized >
		
		 <body class="form-v9">
		 <div class="page-content">
			 <div class="form-v9-content" style=" background:  rgba(3,3,3,0.68);">
				 <form class="form-detail" @onsubmit="CreateNewUser">
					 <h2>Create User</h2>
					 <div class="form-row-total">
						 <div class="form-row">
							 <input @bind="account.DisplayName" type="text" name="full-name" id="full-name" class="input-text" placeholder="Name" required>
						 </div>
						 <div class="form-row">
							 <input @bind="account.Email" type="email" name="your-email" id="your-email" class="input-text" placeholder="Email"  required>
						 </div>
					 </div>
					 <div class="form-row-total">
						 <div class="form-row">
							 <input @bind="account.Password" type="password" name="password" id="password" class="input-text" placeholder="Password" required>
						 </div>
						 <div class="form-row">
							 <select @bind="account.Type" class="userType" name="userType" placeholder="User Type">
								 <option value="admin">Admin</option>
								 <option value="user">User</option>
							 </select>
						 </div>
					 </div>
					 <div class="form-row-last">
						 <input type="submit" name="register" class="register" value="Register">
					 </div>
				 </form>
			 </div>
		 </div>
		 </body>
		
	</Authorized>
	<NotAuthorized>
		<body>
		<header class="bgimg-1" id="home">
			<div class="w3-display-left w3-text-white" style="padding-left: 5%">
				<span class="w3-jumbo w3-hide-small">Log in to see the content</span><br>
				<span class="w3-xxlarge w3-hide-large w3-hide-medium">Log in to see the content</span><br>
			</div>
		</header>
		</body>
	</NotAuthorized>
</AuthorizeView>
</CascadingAuthenticationState>
@code {
	Account account = new Account();
	
	async Task CreateNewUser()
	{
		await AccountService.CreateUser(account);
		NavigationManager.NavigateTo("/home");
	}
}